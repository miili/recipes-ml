diff --git a/CMakeLists.txt b/CMakeLists.txt
index fa50f155..34c02cd1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,7 +10,6 @@ if(WITH_CUDA)
   add_definitions(-D__CUDA_NO_HALF_OPERATORS__)
 endif()
 
-find_package(Python3 COMPONENTS Development)
 find_package(Torch REQUIRED)
 
 file(GLOB HEADERS torchvision/csrc/*.h)
@@ -22,12 +21,14 @@ file(GLOB MODELS_HEADERS torchvision/csrc/models/*.h)
 file(GLOB MODELS_SOURCES torchvision/csrc/models/*.h torchvision/csrc/models/*.cpp)
 
 add_library(${PROJECT_NAME} SHARED ${MODELS_SOURCES} ${OPERATOR_SOURCES})
-target_link_libraries(${PROJECT_NAME} PRIVATE ${TORCH_LIBRARIES} Python3::Python)
 set_target_properties(${PROJECT_NAME} PROPERTIES EXPORT_NAME TorchVision)
 
 target_include_directories(${PROJECT_NAME} INTERFACE
   $<BUILD_INTERFACE:${HEADERS}>
   $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+target_include_directories(${PROJECT_NAME} PRIVATE
+  ${TORCH_INCLUDE_DIRS}
+)
 
 include(GNUInstallDirs)
 include(CMakePackageConfigHelpers)
diff --git a/torchvision/csrc/cpu/vision_cpu.h b/torchvision/csrc/cpu/vision_cpu.h
index 6b68b356..54946cf4 100644
--- a/torchvision/csrc/cpu/vision_cpu.h
+++ b/torchvision/csrc/cpu/vision_cpu.h
@@ -1,5 +1,5 @@
 #pragma once
-#include <torch/extension.h>
+#include <torch/all.h>

 std::tuple<at::Tensor, at::Tensor> ROIPool_forward_cpu(
     const at::Tensor& input,
diff --git a/torchvision/csrc/empty_tensor_op.h b/torchvision/csrc/empty_tensor_op.h
index 64a1c44f..99448109 100644
--- a/torchvision/csrc/empty_tensor_op.h
+++ b/torchvision/csrc/empty_tensor_op.h
@@ -2,8 +2,6 @@
 
 // All pure C++ headers for the C++ frontend.
 #include <torch/all.h>
-// Python bindings for the C++ frontend (includes Python.h).
-#include <torch/python.h>
 
 class NewEmptyTensorOp : public torch::autograd::Function<NewEmptyTensorOp> {
  public:
diff --git a/torchvision/csrc/vision.cpp b/torchvision/csrc/vision.cpp
index aa2ec26b..4f5fee1e 100644
--- a/torchvision/csrc/vision.cpp
+++ b/torchvision/csrc/vision.cpp
@@ -1,4 +1,3 @@
-#include <Python.h>
 #include <torch/script.h>
 
 #ifdef WITH_CUDA
